-- soc_system.vhd

-- Generated using ACDS version 18.0 614

library IEEE;
library soc_system_FE_FPGA_Microphone_Encoder_Decoder_10;
library soc_system_FE_Qsys_AD1939_Audio_Research_v1_10;
library soc_system_altera_iopll_180;
library soc_system_altera_emif_a10_hps_180;
library soc_system_delay_and_sum_beamformer_10;
library soc_system_altera_arria10_hps_180;
library soc_system_altera_jtag_avalon_master_180;
library soc_system_simple_gain_10;
library soc_system_altera_avalon_sysid_qsys_180;
library soc_system_altera_mm_interconnect_180;
library soc_system_altera_avalon_st_adapter_180;
library soc_system_altera_reset_controller_180;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use soc_system_FE_FPGA_Microphone_Encoder_Decoder_10.soc_system_pkg.all;
use soc_system_FE_Qsys_AD1939_Audio_Research_v1_10.soc_system_pkg.all;
use soc_system_altera_iopll_180.soc_system_pkg.all;
use soc_system_altera_emif_a10_hps_180.soc_system_pkg.all;
use soc_system_delay_and_sum_beamformer_10.soc_system_pkg.all;
use soc_system_altera_arria10_hps_180.soc_system_pkg.all;
use soc_system_altera_jtag_avalon_master_180.soc_system_pkg.all;
use soc_system_simple_gain_10.soc_system_pkg.all;
use soc_system_altera_avalon_sysid_qsys_180.soc_system_pkg.all;
use soc_system_altera_mm_interconnect_180.soc_system_pkg.all;
use soc_system_altera_avalon_st_adapter_180.soc_system_pkg.all;
use soc_system_altera_reset_controller_180.soc_system_pkg.all;

entity soc_system is
	port (
		ad1939_abclk_clk                     : in    std_logic                     := '0';             --                 ad1939_abclk.clk
		ad1939_alrclk_clk                    : in    std_logic                     := '0';             --                ad1939_alrclk.clk
		ad1939_mclk_clk                      : in    std_logic                     := '0';             --                  ad1939_mclk.clk
		ad1939_physical_ad1939_adc_asdata1   : in    std_logic                     := '0';             --              ad1939_physical.ad1939_adc_asdata1
		ad1939_physical_ad1939_adc_asdata2   : in    std_logic                     := '0';             --                             .ad1939_adc_asdata2
		ad1939_physical_ad1939_dac_dbclk     : out   std_logic;                                        --                             .ad1939_dac_dbclk
		ad1939_physical_ad1939_dac_dlrclk    : out   std_logic;                                        --                             .ad1939_dac_dlrclk
		ad1939_physical_ad1939_dac_dsdata1   : out   std_logic;                                        --                             .ad1939_dac_dsdata1
		ad1939_physical_ad1939_dac_dsdata2   : out   std_logic;                                        --                             .ad1939_dac_dsdata2
		ad1939_physical_ad1939_dac_dsdata3   : out   std_logic;                                        --                             .ad1939_dac_dsdata3
		ad1939_physical_ad1939_dac_dsdata4   : out   std_logic;                                        --                             .ad1939_dac_dsdata4
		clk_clk                              : in    std_logic                     := '0';             --                          clk.clk
		ddr4_global_reset_reset_sink_reset_n : in    std_logic                     := '0';             -- ddr4_global_reset_reset_sink.reset_n
		ddr4_mem_conduit_end_mem_ck          : out   std_logic_vector(0 downto 0);                     --         ddr4_mem_conduit_end.mem_ck
		ddr4_mem_conduit_end_mem_ck_n        : out   std_logic_vector(0 downto 0);                     --                             .mem_ck_n
		ddr4_mem_conduit_end_mem_a           : out   std_logic_vector(16 downto 0);                    --                             .mem_a
		ddr4_mem_conduit_end_mem_act_n       : out   std_logic_vector(0 downto 0);                     --                             .mem_act_n
		ddr4_mem_conduit_end_mem_ba          : out   std_logic_vector(1 downto 0);                     --                             .mem_ba
		ddr4_mem_conduit_end_mem_bg          : out   std_logic_vector(1 downto 0);                     --                             .mem_bg
		ddr4_mem_conduit_end_mem_cke         : out   std_logic_vector(0 downto 0);                     --                             .mem_cke
		ddr4_mem_conduit_end_mem_cs_n        : out   std_logic_vector(0 downto 0);                     --                             .mem_cs_n
		ddr4_mem_conduit_end_mem_odt         : out   std_logic_vector(0 downto 0);                     --                             .mem_odt
		ddr4_mem_conduit_end_mem_reset_n     : out   std_logic_vector(0 downto 0);                     --                             .mem_reset_n
		ddr4_mem_conduit_end_mem_par         : out   std_logic_vector(0 downto 0);                     --                             .mem_par
		ddr4_mem_conduit_end_mem_alert_n     : in    std_logic_vector(0 downto 0)  := (others => '0'); --                             .mem_alert_n
		ddr4_mem_conduit_end_mem_dqs         : inout std_logic_vector(3 downto 0)  := (others => '0'); --                             .mem_dqs
		ddr4_mem_conduit_end_mem_dqs_n       : inout std_logic_vector(3 downto 0)  := (others => '0'); --                             .mem_dqs_n
		ddr4_mem_conduit_end_mem_dq          : inout std_logic_vector(31 downto 0) := (others => '0'); --                             .mem_dq
		ddr4_mem_conduit_end_mem_dbi_n       : inout std_logic_vector(3 downto 0)  := (others => '0'); --                             .mem_dbi_n
		ddr4_oct_conduit_end_oct_rzqin       : in    std_logic                     := '0';             --         ddr4_oct_conduit_end.oct_rzqin
		ddr4_pll_ref_clk_clock_sink_clk      : in    std_logic                     := '0';             --  ddr4_pll_ref_clk_clock_sink.clk
		hps_f2h_cold_reset_req_reset_n       : in    std_logic                     := '0';             --       hps_f2h_cold_reset_req.reset_n
		hps_f2h_irq0_irq                     : in    std_logic_vector(31 downto 0) := (others => '0'); --                 hps_f2h_irq0.irq
		hps_f2h_irq1_irq                     : in    std_logic_vector(31 downto 0) := (others => '0'); --                 hps_f2h_irq1.irq
		hps_f2h_warm_reset_req_reset_n       : in    std_logic                     := '0';             --       hps_f2h_warm_reset_req.reset_n
		hps_i2c0_sda_i                       : in    std_logic                     := '0';             --                     hps_i2c0.sda_i
		hps_i2c0_sda_oe                      : out   std_logic;                                        --                             .sda_oe
		hps_i2c0_clk_clk                     : out   std_logic;                                        --                 hps_i2c0_clk.clk
		hps_i2c0_scl_in_clk                  : in    std_logic                     := '0';             --              hps_i2c0_scl_in.clk
		hps_io_hps_io_phery_emac1_TX_CLK     : out   std_logic;                                        --                       hps_io.hps_io_phery_emac1_TX_CLK
		hps_io_hps_io_phery_emac1_TXD0       : out   std_logic;                                        --                             .hps_io_phery_emac1_TXD0
		hps_io_hps_io_phery_emac1_TXD1       : out   std_logic;                                        --                             .hps_io_phery_emac1_TXD1
		hps_io_hps_io_phery_emac1_TXD2       : out   std_logic;                                        --                             .hps_io_phery_emac1_TXD2
		hps_io_hps_io_phery_emac1_TXD3       : out   std_logic;                                        --                             .hps_io_phery_emac1_TXD3
		hps_io_hps_io_phery_emac1_RX_CTL     : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RX_CTL
		hps_io_hps_io_phery_emac1_TX_CTL     : out   std_logic;                                        --                             .hps_io_phery_emac1_TX_CTL
		hps_io_hps_io_phery_emac1_RX_CLK     : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RX_CLK
		hps_io_hps_io_phery_emac1_RXD0       : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RXD0
		hps_io_hps_io_phery_emac1_RXD1       : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RXD1
		hps_io_hps_io_phery_emac1_RXD2       : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RXD2
		hps_io_hps_io_phery_emac1_RXD3       : in    std_logic                     := '0';             --                             .hps_io_phery_emac1_RXD3
		hps_io_hps_io_phery_emac1_MDIO       : inout std_logic                     := '0';             --                             .hps_io_phery_emac1_MDIO
		hps_io_hps_io_phery_emac1_MDC        : out   std_logic;                                        --                             .hps_io_phery_emac1_MDC
		hps_io_hps_io_phery_emac2_TX_CLK     : out   std_logic;                                        --                             .hps_io_phery_emac2_TX_CLK
		hps_io_hps_io_phery_emac2_TXD0       : out   std_logic;                                        --                             .hps_io_phery_emac2_TXD0
		hps_io_hps_io_phery_emac2_TXD1       : out   std_logic;                                        --                             .hps_io_phery_emac2_TXD1
		hps_io_hps_io_phery_emac2_TXD2       : out   std_logic;                                        --                             .hps_io_phery_emac2_TXD2
		hps_io_hps_io_phery_emac2_TXD3       : out   std_logic;                                        --                             .hps_io_phery_emac2_TXD3
		hps_io_hps_io_phery_emac2_RX_CTL     : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RX_CTL
		hps_io_hps_io_phery_emac2_TX_CTL     : out   std_logic;                                        --                             .hps_io_phery_emac2_TX_CTL
		hps_io_hps_io_phery_emac2_RX_CLK     : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RX_CLK
		hps_io_hps_io_phery_emac2_RXD0       : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RXD0
		hps_io_hps_io_phery_emac2_RXD1       : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RXD1
		hps_io_hps_io_phery_emac2_RXD2       : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RXD2
		hps_io_hps_io_phery_emac2_RXD3       : in    std_logic                     := '0';             --                             .hps_io_phery_emac2_RXD3
		hps_io_hps_io_phery_emac2_MDIO       : inout std_logic                     := '0';             --                             .hps_io_phery_emac2_MDIO
		hps_io_hps_io_phery_emac2_MDC        : out   std_logic;                                        --                             .hps_io_phery_emac2_MDC
		hps_io_hps_io_phery_sdmmc_CMD        : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_CMD
		hps_io_hps_io_phery_sdmmc_D0         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D0
		hps_io_hps_io_phery_sdmmc_D1         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D1
		hps_io_hps_io_phery_sdmmc_D2         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D2
		hps_io_hps_io_phery_sdmmc_D3         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D3
		hps_io_hps_io_phery_sdmmc_D4         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D4
		hps_io_hps_io_phery_sdmmc_D5         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D5
		hps_io_hps_io_phery_sdmmc_D6         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D6
		hps_io_hps_io_phery_sdmmc_D7         : inout std_logic                     := '0';             --                             .hps_io_phery_sdmmc_D7
		hps_io_hps_io_phery_sdmmc_CCLK       : out   std_logic;                                        --                             .hps_io_phery_sdmmc_CCLK
		hps_io_hps_io_phery_usb1_DATA0       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA0
		hps_io_hps_io_phery_usb1_DATA1       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA1
		hps_io_hps_io_phery_usb1_DATA2       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA2
		hps_io_hps_io_phery_usb1_DATA3       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA3
		hps_io_hps_io_phery_usb1_DATA4       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA4
		hps_io_hps_io_phery_usb1_DATA5       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA5
		hps_io_hps_io_phery_usb1_DATA6       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA6
		hps_io_hps_io_phery_usb1_DATA7       : inout std_logic                     := '0';             --                             .hps_io_phery_usb1_DATA7
		hps_io_hps_io_phery_usb1_CLK         : in    std_logic                     := '0';             --                             .hps_io_phery_usb1_CLK
		hps_io_hps_io_phery_usb1_STP         : out   std_logic;                                        --                             .hps_io_phery_usb1_STP
		hps_io_hps_io_phery_usb1_DIR         : in    std_logic                     := '0';             --                             .hps_io_phery_usb1_DIR
		hps_io_hps_io_phery_usb1_NXT         : in    std_logic                     := '0';             --                             .hps_io_phery_usb1_NXT
		hps_io_hps_io_phery_uart0_RX         : in    std_logic                     := '0';             --                             .hps_io_phery_uart0_RX
		hps_io_hps_io_phery_uart0_TX         : out   std_logic;                                        --                             .hps_io_phery_uart0_TX
		hps_io_hps_io_phery_uart0_CTS_N      : in    std_logic                     := '0';             --                             .hps_io_phery_uart0_CTS_N
		hps_io_hps_io_phery_uart0_RTS_N      : out   std_logic;                                        --                             .hps_io_phery_uart0_RTS_N
		hps_spim1_mosi_o                     : out   std_logic;                                        --                    hps_spim1.mosi_o
		hps_spim1_miso_i                     : in    std_logic                     := '0';             --                             .miso_i
		hps_spim1_ss_in_n                    : in    std_logic                     := '0';             --                             .ss_in_n
		hps_spim1_mosi_oe                    : out   std_logic;                                        --                             .mosi_oe
		hps_spim1_ss0_n_o                    : out   std_logic;                                        --                             .ss0_n_o
		hps_spim1_ss1_n_o                    : out   std_logic;                                        --                             .ss1_n_o
		hps_spim1_ss2_n_o                    : out   std_logic;                                        --                             .ss2_n_o
		hps_spim1_ss3_n_o                    : out   std_logic;                                        --                             .ss3_n_o
		hps_spim1_sclk_out_clk               : out   std_logic;                                        --           hps_spim1_sclk_out.clk
		mclk_pll_locked_export               : out   std_logic;                                        --              mclk_pll_locked.export
		reset_reset_n                        : in    std_logic                     := '0';             --                        reset.reset_n
		rj45_interface_serial_data_in        : in    std_logic                     := '0';             --               rj45_interface.serial_data_in
		rj45_interface_serial_data_out       : out   std_logic;                                        --                             .serial_data_out
		rj45_interface_serial_clk_out        : out   std_logic                                         --                             .serial_clk_out
	);
end entity soc_system;

architecture rtl of soc_system is
	signal fe_qsys_ad1939_audio_research_v1_0_line_in_valid                    : std_logic;                       -- FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_ADC2_valid -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC2_valid
	signal fe_qsys_ad1939_audio_research_v1_0_line_in_data                     : std_logic_vector(31 downto 0);   -- FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_ADC2_data -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC2_data
	signal fe_qsys_ad1939_audio_research_v1_0_line_in_channel                  : std_logic_vector(1 downto 0);    -- FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_ADC2_channel -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC2_channel
	signal fe_qsys_ad1939_audio_research_v1_0_line_in_error                    : std_logic_vector(1 downto 0);    -- FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_ADC2_error -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC2_error
	signal simple_gain_0_avalon_streaming_source_valid                         : std_logic;                       -- simple_gain_0:avalon_source_valid -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC3_valid
	signal simple_gain_0_avalon_streaming_source_data                          : std_logic_vector(31 downto 0);   -- simple_gain_0:avalon_source_data -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC3_data
	signal simple_gain_0_avalon_streaming_source_channel                       : std_logic_vector(1 downto 0);    -- simple_gain_0:avalon_source_channel -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC3_channel
	signal simple_gain_0_avalon_streaming_source_error                         : std_logic_vector(1 downto 0);    -- simple_gain_0:avalon_source_error -> FE_Qsys_AD1939_Audio_Research_v1_0:AD1939_DAC3_error
	signal fe_fpga_microphone_encoder_decoder_0_mic_output_valid               : std_logic;                       -- FE_FPGA_Microphone_Encoder_Decoder_0:mic_out_valid -> delay_and_sum_beamformer_0:avalon_sink_valid
	signal fe_fpga_microphone_encoder_decoder_0_mic_output_data                : std_logic_vector(31 downto 0);   -- FE_FPGA_Microphone_Encoder_Decoder_0:mic_out_data -> delay_and_sum_beamformer_0:avalon_sink_data
	signal fe_fpga_microphone_encoder_decoder_0_mic_output_channel             : std_logic_vector(3 downto 0);    -- FE_FPGA_Microphone_Encoder_Decoder_0:mic_out_channel -> delay_and_sum_beamformer_0:avalon_sink_channel
	signal fe_fpga_microphone_encoder_decoder_0_mic_output_error               : std_logic_vector(1 downto 0);    -- FE_FPGA_Microphone_Encoder_Decoder_0:mic_out_error -> delay_and_sum_beamformer_0:avalon_sink_error
	signal pll_using_ad1939_mclk_outclk0_clk                                   : std_logic;                       -- PLL_using_AD1939_MCLK:outclk_0 -> [FE_FPGA_Microphone_Encoder_Decoder_0:sys_clk, FE_Qsys_AD1939_Audio_Research_v1_0:sys_clk, avalon_st_adapter:in_clk_0_clk, delay_and_sum_beamformer_0:clk, mm_interconnect_0:PLL_using_AD1939_MCLK_outclk0_clk, rst_controller:clk, simple_gain_0:clk]
	signal pll_using_ad1939_mclk_outclk1_clk                                   : std_logic;                       -- PLL_using_AD1939_MCLK:outclk_1 -> FE_FPGA_Microphone_Encoder_Decoder_0:serial_clk
	signal hps_emif_gp_to_emif                                                 : std_logic_vector(1 downto 0);    -- hps:emif_gp_to_emif -> ddr4:hps_to_emif_gp
	signal ddr4_hps_emif_conduit_end_emif_to_hps                               : std_logic_vector(4095 downto 0); -- ddr4:emif_to_hps -> hps:emif_emif_to_hps
	signal ddr4_hps_emif_conduit_end_emif_to_gp                                : std_logic_vector(0 downto 0);    -- ddr4:emif_to_hps_gp -> hps:emif_emif_to_gp
	signal hps_emif_hps_to_emif                                                : std_logic_vector(4095 downto 0); -- hps:emif_hps_to_emif -> ddr4:hps_to_emif
	signal hps_h2f_lw_axi_master_awburst                                       : std_logic_vector(1 downto 0);    -- hps:h2f_lw_AWBURST -> mm_interconnect_0:hps_h2f_lw_axi_master_awburst
	signal hps_h2f_lw_axi_master_awuser                                        : std_logic_vector(4 downto 0);    -- hps:h2f_lw_AWUSER -> mm_interconnect_0:hps_h2f_lw_axi_master_awuser
	signal hps_h2f_lw_axi_master_arlen                                         : std_logic_vector(3 downto 0);    -- hps:h2f_lw_ARLEN -> mm_interconnect_0:hps_h2f_lw_axi_master_arlen
	signal hps_h2f_lw_axi_master_wstrb                                         : std_logic_vector(3 downto 0);    -- hps:h2f_lw_WSTRB -> mm_interconnect_0:hps_h2f_lw_axi_master_wstrb
	signal hps_h2f_lw_axi_master_wready                                        : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_wready -> hps:h2f_lw_WREADY
	signal hps_h2f_lw_axi_master_rid                                           : std_logic_vector(3 downto 0);    -- mm_interconnect_0:hps_h2f_lw_axi_master_rid -> hps:h2f_lw_RID
	signal hps_h2f_lw_axi_master_rready                                        : std_logic;                       -- hps:h2f_lw_RREADY -> mm_interconnect_0:hps_h2f_lw_axi_master_rready
	signal hps_h2f_lw_axi_master_awlen                                         : std_logic_vector(3 downto 0);    -- hps:h2f_lw_AWLEN -> mm_interconnect_0:hps_h2f_lw_axi_master_awlen
	signal hps_h2f_lw_axi_master_wid                                           : std_logic_vector(3 downto 0);    -- hps:h2f_lw_WID -> mm_interconnect_0:hps_h2f_lw_axi_master_wid
	signal hps_h2f_lw_axi_master_arcache                                       : std_logic_vector(3 downto 0);    -- hps:h2f_lw_ARCACHE -> mm_interconnect_0:hps_h2f_lw_axi_master_arcache
	signal hps_h2f_lw_axi_master_wvalid                                        : std_logic;                       -- hps:h2f_lw_WVALID -> mm_interconnect_0:hps_h2f_lw_axi_master_wvalid
	signal hps_h2f_lw_axi_master_araddr                                        : std_logic_vector(20 downto 0);   -- hps:h2f_lw_ARADDR -> mm_interconnect_0:hps_h2f_lw_axi_master_araddr
	signal hps_h2f_lw_axi_master_arprot                                        : std_logic_vector(2 downto 0);    -- hps:h2f_lw_ARPROT -> mm_interconnect_0:hps_h2f_lw_axi_master_arprot
	signal hps_h2f_lw_axi_master_awprot                                        : std_logic_vector(2 downto 0);    -- hps:h2f_lw_AWPROT -> mm_interconnect_0:hps_h2f_lw_axi_master_awprot
	signal hps_h2f_lw_axi_master_wdata                                         : std_logic_vector(31 downto 0);   -- hps:h2f_lw_WDATA -> mm_interconnect_0:hps_h2f_lw_axi_master_wdata
	signal hps_h2f_lw_axi_master_arvalid                                       : std_logic;                       -- hps:h2f_lw_ARVALID -> mm_interconnect_0:hps_h2f_lw_axi_master_arvalid
	signal hps_h2f_lw_axi_master_awcache                                       : std_logic_vector(3 downto 0);    -- hps:h2f_lw_AWCACHE -> mm_interconnect_0:hps_h2f_lw_axi_master_awcache
	signal hps_h2f_lw_axi_master_arid                                          : std_logic_vector(3 downto 0);    -- hps:h2f_lw_ARID -> mm_interconnect_0:hps_h2f_lw_axi_master_arid
	signal hps_h2f_lw_axi_master_arlock                                        : std_logic_vector(1 downto 0);    -- hps:h2f_lw_ARLOCK -> mm_interconnect_0:hps_h2f_lw_axi_master_arlock
	signal hps_h2f_lw_axi_master_awlock                                        : std_logic_vector(1 downto 0);    -- hps:h2f_lw_AWLOCK -> mm_interconnect_0:hps_h2f_lw_axi_master_awlock
	signal hps_h2f_lw_axi_master_awaddr                                        : std_logic_vector(20 downto 0);   -- hps:h2f_lw_AWADDR -> mm_interconnect_0:hps_h2f_lw_axi_master_awaddr
	signal hps_h2f_lw_axi_master_bresp                                         : std_logic_vector(1 downto 0);    -- mm_interconnect_0:hps_h2f_lw_axi_master_bresp -> hps:h2f_lw_BRESP
	signal hps_h2f_lw_axi_master_arready                                       : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_arready -> hps:h2f_lw_ARREADY
	signal hps_h2f_lw_axi_master_rdata                                         : std_logic_vector(31 downto 0);   -- mm_interconnect_0:hps_h2f_lw_axi_master_rdata -> hps:h2f_lw_RDATA
	signal hps_h2f_lw_axi_master_awready                                       : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_awready -> hps:h2f_lw_AWREADY
	signal hps_h2f_lw_axi_master_arburst                                       : std_logic_vector(1 downto 0);    -- hps:h2f_lw_ARBURST -> mm_interconnect_0:hps_h2f_lw_axi_master_arburst
	signal hps_h2f_lw_axi_master_arsize                                        : std_logic_vector(2 downto 0);    -- hps:h2f_lw_ARSIZE -> mm_interconnect_0:hps_h2f_lw_axi_master_arsize
	signal hps_h2f_lw_axi_master_bready                                        : std_logic;                       -- hps:h2f_lw_BREADY -> mm_interconnect_0:hps_h2f_lw_axi_master_bready
	signal hps_h2f_lw_axi_master_rlast                                         : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_rlast -> hps:h2f_lw_RLAST
	signal hps_h2f_lw_axi_master_wlast                                         : std_logic;                       -- hps:h2f_lw_WLAST -> mm_interconnect_0:hps_h2f_lw_axi_master_wlast
	signal hps_h2f_lw_axi_master_rresp                                         : std_logic_vector(1 downto 0);    -- mm_interconnect_0:hps_h2f_lw_axi_master_rresp -> hps:h2f_lw_RRESP
	signal hps_h2f_lw_axi_master_awid                                          : std_logic_vector(3 downto 0);    -- hps:h2f_lw_AWID -> mm_interconnect_0:hps_h2f_lw_axi_master_awid
	signal hps_h2f_lw_axi_master_bid                                           : std_logic_vector(3 downto 0);    -- mm_interconnect_0:hps_h2f_lw_axi_master_bid -> hps:h2f_lw_BID
	signal hps_h2f_lw_axi_master_bvalid                                        : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_bvalid -> hps:h2f_lw_BVALID
	signal hps_h2f_lw_axi_master_awsize                                        : std_logic_vector(2 downto 0);    -- hps:h2f_lw_AWSIZE -> mm_interconnect_0:hps_h2f_lw_axi_master_awsize
	signal hps_h2f_lw_axi_master_awvalid                                       : std_logic;                       -- hps:h2f_lw_AWVALID -> mm_interconnect_0:hps_h2f_lw_axi_master_awvalid
	signal hps_h2f_lw_axi_master_aruser                                        : std_logic_vector(4 downto 0);    -- hps:h2f_lw_ARUSER -> mm_interconnect_0:hps_h2f_lw_axi_master_aruser
	signal hps_h2f_lw_axi_master_rvalid                                        : std_logic;                       -- mm_interconnect_0:hps_h2f_lw_axi_master_rvalid -> hps:h2f_lw_RVALID
	signal mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_readdata  : std_logic_vector(31 downto 0);   -- delay_and_sum_beamformer_0:avalon_slave_readdata -> mm_interconnect_0:delay_and_sum_beamformer_0_avalon_slave_readdata
	signal mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_address   : std_logic_vector(0 downto 0);    -- mm_interconnect_0:delay_and_sum_beamformer_0_avalon_slave_address -> delay_and_sum_beamformer_0:avalon_slave_address
	signal mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_read      : std_logic;                       -- mm_interconnect_0:delay_and_sum_beamformer_0_avalon_slave_read -> delay_and_sum_beamformer_0:avalon_slave_read
	signal mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_write     : std_logic;                       -- mm_interconnect_0:delay_and_sum_beamformer_0_avalon_slave_write -> delay_and_sum_beamformer_0:avalon_slave_write
	signal mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_writedata : std_logic_vector(31 downto 0);   -- mm_interconnect_0:delay_and_sum_beamformer_0_avalon_slave_writedata -> delay_and_sum_beamformer_0:avalon_slave_writedata
	signal mm_interconnect_0_simple_gain_0_avalon_slave_readdata               : std_logic_vector(31 downto 0);   -- simple_gain_0:avalon_slave_readdata -> mm_interconnect_0:simple_gain_0_avalon_slave_readdata
	signal mm_interconnect_0_simple_gain_0_avalon_slave_address                : std_logic_vector(0 downto 0);    -- mm_interconnect_0:simple_gain_0_avalon_slave_address -> simple_gain_0:avalon_slave_address
	signal mm_interconnect_0_simple_gain_0_avalon_slave_read                   : std_logic;                       -- mm_interconnect_0:simple_gain_0_avalon_slave_read -> simple_gain_0:avalon_slave_read
	signal mm_interconnect_0_simple_gain_0_avalon_slave_write                  : std_logic;                       -- mm_interconnect_0:simple_gain_0_avalon_slave_write -> simple_gain_0:avalon_slave_write
	signal mm_interconnect_0_simple_gain_0_avalon_slave_writedata              : std_logic_vector(31 downto 0);   -- mm_interconnect_0:simple_gain_0_avalon_slave_writedata -> simple_gain_0:avalon_slave_writedata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_readdata               : std_logic_vector(31 downto 0);   -- sysid_qsys_0:readdata -> mm_interconnect_0:sysid_qsys_0_control_slave_readdata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_address                : std_logic_vector(0 downto 0);    -- mm_interconnect_0:sysid_qsys_0_control_slave_address -> sysid_qsys_0:address
	signal delay_and_sum_beamformer_0_avalon_streaming_source_valid            : std_logic;                       -- delay_and_sum_beamformer_0:avalon_source_valid -> avalon_st_adapter:in_0_valid
	signal delay_and_sum_beamformer_0_avalon_streaming_source_data             : std_logic_vector(31 downto 0);   -- delay_and_sum_beamformer_0:avalon_source_data -> avalon_st_adapter:in_0_data
	signal delay_and_sum_beamformer_0_avalon_streaming_source_channel          : std_logic;                       -- delay_and_sum_beamformer_0:avalon_source_channel -> avalon_st_adapter:in_0_channel
	signal delay_and_sum_beamformer_0_avalon_streaming_source_error            : std_logic_vector(1 downto 0);    -- delay_and_sum_beamformer_0:avalon_source_error -> avalon_st_adapter:in_0_error
	signal avalon_st_adapter_out_0_valid                                       : std_logic;                       -- avalon_st_adapter:out_0_valid -> simple_gain_0:avalon_sink_valid
	signal avalon_st_adapter_out_0_data                                        : std_logic_vector(31 downto 0);   -- avalon_st_adapter:out_0_data -> simple_gain_0:avalon_sink_data
	signal avalon_st_adapter_out_0_channel                                     : std_logic_vector(1 downto 0);    -- avalon_st_adapter:out_0_channel -> simple_gain_0:avalon_sink_channel
	signal avalon_st_adapter_out_0_error                                       : std_logic_vector(1 downto 0);    -- avalon_st_adapter:out_0_error -> simple_gain_0:avalon_sink_error
	signal rst_controller_reset_out_reset                                      : std_logic;                       -- rst_controller:reset_out -> [FE_Qsys_AD1939_Audio_Research_v1_0:sys_reset, avalon_st_adapter:in_rst_0_reset, delay_and_sum_beamformer_0:reset, mm_interconnect_0:delay_and_sum_beamformer_0_reset_reset_bridge_in_reset_reset, rst_controller_reset_out_reset:in, simple_gain_0:reset]
	signal rst_controller_001_reset_out_reset                                  : std_logic;                       -- rst_controller_001:reset_out -> [mm_interconnect_0:hps_h2f_lw_axi_reset_reset_bridge_in_reset_reset, rst_controller_001_reset_out_reset:in]
	signal reset_reset_n_ports_inv                                             : std_logic;                       -- reset_reset_n:inv -> [PLL_using_AD1939_MCLK:rst, jtag_master:clk_reset_reset, rst_controller:reset_in0, rst_controller_001:reset_in0]
	signal rst_controller_reset_out_reset_ports_inv                            : std_logic;                       -- rst_controller_reset_out_reset:inv -> FE_FPGA_Microphone_Encoder_Decoder_0:reset_n
	signal rst_controller_001_reset_out_reset_ports_inv                        : std_logic;                       -- rst_controller_001_reset_out_reset:inv -> [hps:h2f_lw_axi_rst, sysid_qsys_0:reset_n]

begin

	fe_fpga_microphone_encoder_decoder_0 : component soc_system_FE_FPGA_Microphone_Encoder_Decoder_10.soc_system_pkg.FE_FPGA_Microphone_Encoder_Decoder
		generic map (
			avalon_data_width => 32,
			mic_data_width    => 24,
			bme_data_width    => 96,
			rgb_data_width    => 16,
			cfg_data_width    => 16,
			ch_width          => 4,
			n_mics            => 16
		)
		port map (
			reset_n         => rst_controller_reset_out_reset_ports_inv,                --           reset.reset_n
			serial_data_in  => rj45_interface_serial_data_in,                           --  RJ45_Interface.serial_data_in
			serial_data_out => rj45_interface_serial_data_out,                          --                .serial_data_out
			serial_clk_out  => rj45_interface_serial_clk_out,                           --                .serial_clk_out
			sys_clk         => pll_using_ad1939_mclk_outclk0_clk,                       --         sys_clk.clk
			busy_out        => open,                                                    -- control_conduit.busy_out
			bme_out_data    => open,                                                    --      bme_output.data
			bme_out_error   => open,                                                    --                .error
			bme_out_valid   => open,                                                    --                .valid
			mic_out_channel => fe_fpga_microphone_encoder_decoder_0_mic_output_channel, --      mic_output.channel
			mic_out_data    => fe_fpga_microphone_encoder_decoder_0_mic_output_data,    --                .data
			mic_out_error   => fe_fpga_microphone_encoder_decoder_0_mic_output_error,   --                .error
			mic_out_valid   => fe_fpga_microphone_encoder_decoder_0_mic_output_valid,   --                .valid
			cfg_input_data  => open,                                                    --       cfg_input.data
			cfg_input_error => open,                                                    --                .error
			cfg_input_valid => open,                                                    --                .valid
			rgb_input_data  => open,                                                    --       rgb_input.data
			rgb_input_error => open,                                                    --                .error
			rgb_input_valid => open,                                                    --                .valid
			serial_clk      => pll_using_ad1939_mclk_outclk1_clk                        --      serial_clk.clk
		);

	fe_qsys_ad1939_audio_research_v1_0 : component soc_system_FE_Qsys_AD1939_Audio_Research_v1_10.soc_system_pkg.AD1939_hps_audio_research
		port map (
			AD1939_DAC1_channel => open,                                               --     Headphone_Out.channel
			AD1939_DAC1_data    => open,                                               --                  .data
			AD1939_DAC1_error   => open,                                               --                  .error
			AD1939_DAC1_valid   => open,                                               --                  .valid
			AD1939_DAC2_channel => fe_qsys_ad1939_audio_research_v1_0_line_in_channel, --          Line_Out.channel
			AD1939_DAC2_data    => fe_qsys_ad1939_audio_research_v1_0_line_in_data,    --                  .data
			AD1939_DAC2_error   => fe_qsys_ad1939_audio_research_v1_0_line_in_error,   --                  .error
			AD1939_DAC2_valid   => fe_qsys_ad1939_audio_research_v1_0_line_in_valid,   --                  .valid
			AD1939_DAC3_channel => simple_gain_0_avalon_streaming_source_channel,      --          XLR1_Out.channel
			AD1939_DAC3_data    => simple_gain_0_avalon_streaming_source_data,         --                  .data
			AD1939_DAC3_error   => simple_gain_0_avalon_streaming_source_error,        --                  .error
			AD1939_DAC3_valid   => simple_gain_0_avalon_streaming_source_valid,        --                  .valid
			AD1939_DAC4_channel => open,                                               --          XLR2_Out.channel
			AD1939_DAC4_data    => open,                                               --                  .data
			AD1939_DAC4_error   => open,                                               --                  .error
			AD1939_DAC4_valid   => open,                                               --                  .valid
			AD1939_ADC2_channel => fe_qsys_ad1939_audio_research_v1_0_line_in_channel, --           Line_In.channel
			AD1939_ADC2_data    => fe_qsys_ad1939_audio_research_v1_0_line_in_data,    --                  .data
			AD1939_ADC2_error   => fe_qsys_ad1939_audio_research_v1_0_line_in_error,   --                  .error
			AD1939_ADC2_valid   => fe_qsys_ad1939_audio_research_v1_0_line_in_valid,   --                  .valid
			AD1939_ADC1_channel => open,                                               --     Microphone_In.channel
			AD1939_ADC1_data    => open,                                               --                  .data
			AD1939_ADC1_error   => open,                                               --                  .error
			AD1939_ADC1_valid   => open,                                               --                  .valid
			sys_reset           => rst_controller_reset_out_reset,                     --         sys_reset.reset
			AD1939_ADC_ABCLK    => ad1939_abclk_clk,                                   --         clk_abclk.clk
			AD1939_ADC_ALRCLK   => ad1939_alrclk_clk,                                  --        clk_alrclk.clk
			sys_clk             => pll_using_ad1939_mclk_outclk0_clk,                  --           sys_clk.clk
			AD1939_ADC_ASDATA1  => ad1939_physical_ad1939_adc_asdata1,                 -- connect_to_AD1939.ad1939_adc_asdata1
			AD1939_ADC_ASDATA2  => ad1939_physical_ad1939_adc_asdata2,                 --                  .ad1939_adc_asdata2
			AD1939_DAC_DBCLK    => ad1939_physical_ad1939_dac_dbclk,                   --                  .ad1939_dac_dbclk
			AD1939_DAC_DLRCLK   => ad1939_physical_ad1939_dac_dlrclk,                  --                  .ad1939_dac_dlrclk
			AD1939_DAC_DSDATA1  => ad1939_physical_ad1939_dac_dsdata1,                 --                  .ad1939_dac_dsdata1
			AD1939_DAC_DSDATA2  => ad1939_physical_ad1939_dac_dsdata2,                 --                  .ad1939_dac_dsdata2
			AD1939_DAC_DSDATA3  => ad1939_physical_ad1939_dac_dsdata3,                 --                  .ad1939_dac_dsdata3
			AD1939_DAC_DSDATA4  => ad1939_physical_ad1939_dac_dsdata4                  --                  .ad1939_dac_dsdata4
		);

	pll_using_ad1939_mclk : component soc_system_altera_iopll_180.soc_system_pkg.soc_system_altera_iopll_180_i2n24zq
		port map (
			rst      => reset_reset_n_ports_inv,           --   reset.reset
			refclk   => ad1939_mclk_clk,                   --  refclk.clk
			locked   => mclk_pll_locked_export,            --  locked.export
			outclk_0 => pll_using_ad1939_mclk_outclk0_clk, -- outclk0.clk
			outclk_1 => pll_using_ad1939_mclk_outclk1_clk  -- outclk1.clk
		);

	ddr4 : component soc_system_altera_emif_a10_hps_180.soc_system_pkg.soc_system_altera_emif_a10_hps_180_oqueytq
		port map (
			global_reset_n => ddr4_global_reset_reset_sink_reset_n,  -- global_reset_reset_sink.reset_n
			pll_ref_clk    => ddr4_pll_ref_clk_clock_sink_clk,       --  pll_ref_clk_clock_sink.clk
			oct_rzqin      => ddr4_oct_conduit_end_oct_rzqin,        --         oct_conduit_end.oct_rzqin
			mem_ck         => ddr4_mem_conduit_end_mem_ck,           --         mem_conduit_end.mem_ck
			mem_ck_n       => ddr4_mem_conduit_end_mem_ck_n,         --                        .mem_ck_n
			mem_a          => ddr4_mem_conduit_end_mem_a,            --                        .mem_a
			mem_act_n      => ddr4_mem_conduit_end_mem_act_n,        --                        .mem_act_n
			mem_ba         => ddr4_mem_conduit_end_mem_ba,           --                        .mem_ba
			mem_bg         => ddr4_mem_conduit_end_mem_bg,           --                        .mem_bg
			mem_cke        => ddr4_mem_conduit_end_mem_cke,          --                        .mem_cke
			mem_cs_n       => ddr4_mem_conduit_end_mem_cs_n,         --                        .mem_cs_n
			mem_odt        => ddr4_mem_conduit_end_mem_odt,          --                        .mem_odt
			mem_reset_n    => ddr4_mem_conduit_end_mem_reset_n,      --                        .mem_reset_n
			mem_par        => ddr4_mem_conduit_end_mem_par,          --                        .mem_par
			mem_alert_n    => ddr4_mem_conduit_end_mem_alert_n,      --                        .mem_alert_n
			mem_dqs        => ddr4_mem_conduit_end_mem_dqs,          --                        .mem_dqs
			mem_dqs_n      => ddr4_mem_conduit_end_mem_dqs_n,        --                        .mem_dqs_n
			mem_dq         => ddr4_mem_conduit_end_mem_dq,           --                        .mem_dq
			mem_dbi_n      => ddr4_mem_conduit_end_mem_dbi_n,        --                        .mem_dbi_n
			hps_to_emif    => hps_emif_hps_to_emif,                  --    hps_emif_conduit_end.hps_to_emif
			emif_to_hps    => ddr4_hps_emif_conduit_end_emif_to_hps, --                        .emif_to_hps
			hps_to_emif_gp => hps_emif_gp_to_emif,                   --                        .gp_to_emif
			emif_to_hps_gp => ddr4_hps_emif_conduit_end_emif_to_gp   --                        .emif_to_gp
		);

	delay_and_sum_beamformer_0 : component soc_system_delay_and_sum_beamformer_10.soc_system_pkg.DSBF_dataplane_avalon
		port map (
			clk                    => pll_using_ad1939_mclk_outclk0_clk,                                    --                   clock.clk
			reset                  => rst_controller_reset_out_reset,                                       --                   reset.reset
			avalon_slave_address   => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_address(0), --            avalon_slave.address
			avalon_slave_read      => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_read,       --                        .read
			avalon_slave_readdata  => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_readdata,   --                        .readdata
			avalon_slave_write     => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_write,      --                        .write
			avalon_slave_writedata => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_writedata,  --                        .writedata
			avalon_sink_valid      => fe_fpga_microphone_encoder_decoder_0_mic_output_valid,                --   avalon_streaming_sink.valid
			avalon_sink_data       => fe_fpga_microphone_encoder_decoder_0_mic_output_data,                 --                        .data
			avalon_sink_channel    => fe_fpga_microphone_encoder_decoder_0_mic_output_channel,              --                        .channel
			avalon_sink_error      => fe_fpga_microphone_encoder_decoder_0_mic_output_error,                --                        .error
			avalon_source_valid    => delay_and_sum_beamformer_0_avalon_streaming_source_valid,             -- avalon_streaming_source.valid
			avalon_source_data     => delay_and_sum_beamformer_0_avalon_streaming_source_data,              --                        .data
			avalon_source_channel  => delay_and_sum_beamformer_0_avalon_streaming_source_channel,           --                        .channel
			avalon_source_error    => delay_and_sum_beamformer_0_avalon_streaming_source_error              --                        .error
		);

	hps : component soc_system_altera_arria10_hps_180.soc_system_pkg.soc_system_altera_arria10_hps_180_4pootmi
		generic map (
			F2S_Width => 0,
			S2F_Width => 0
		)
		port map (
			h2f_rst_n                 => open,                                         --          h2f_reset.reset_n
			f2h_cold_rst_req_n        => hps_f2h_cold_reset_req_reset_n,               -- f2h_cold_reset_req.reset_n
			f2h_warm_rst_req_n        => hps_f2h_warm_reset_req_reset_n,               -- f2h_warm_reset_req.reset_n
			emif_emif_to_hps          => ddr4_hps_emif_conduit_end_emif_to_hps,        --               emif.emif_to_hps
			emif_hps_to_emif          => hps_emif_hps_to_emif,                         --                   .hps_to_emif
			emif_emif_to_gp           => ddr4_hps_emif_conduit_end_emif_to_gp(0),      --                   .emif_to_gp
			emif_gp_to_emif           => hps_emif_gp_to_emif,                          --                   .gp_to_emif
			h2f_lw_axi_clk            => clk_clk,                                      --   h2f_lw_axi_clock.clk
			h2f_lw_axi_rst            => rst_controller_001_reset_out_reset_ports_inv, --   h2f_lw_axi_reset.reset_n
			h2f_lw_AWID               => hps_h2f_lw_axi_master_awid,                   --  h2f_lw_axi_master.awid
			h2f_lw_AWADDR             => hps_h2f_lw_axi_master_awaddr,                 --                   .awaddr
			h2f_lw_AWLEN              => hps_h2f_lw_axi_master_awlen,                  --                   .awlen
			h2f_lw_AWSIZE             => hps_h2f_lw_axi_master_awsize,                 --                   .awsize
			h2f_lw_AWBURST            => hps_h2f_lw_axi_master_awburst,                --                   .awburst
			h2f_lw_AWLOCK             => hps_h2f_lw_axi_master_awlock,                 --                   .awlock
			h2f_lw_AWCACHE            => hps_h2f_lw_axi_master_awcache,                --                   .awcache
			h2f_lw_AWPROT             => hps_h2f_lw_axi_master_awprot,                 --                   .awprot
			h2f_lw_AWVALID            => hps_h2f_lw_axi_master_awvalid,                --                   .awvalid
			h2f_lw_AWREADY            => hps_h2f_lw_axi_master_awready,                --                   .awready
			h2f_lw_AWUSER             => hps_h2f_lw_axi_master_awuser,                 --                   .awuser
			h2f_lw_WID                => hps_h2f_lw_axi_master_wid,                    --                   .wid
			h2f_lw_WDATA              => hps_h2f_lw_axi_master_wdata,                  --                   .wdata
			h2f_lw_WSTRB              => hps_h2f_lw_axi_master_wstrb,                  --                   .wstrb
			h2f_lw_WLAST              => hps_h2f_lw_axi_master_wlast,                  --                   .wlast
			h2f_lw_WVALID             => hps_h2f_lw_axi_master_wvalid,                 --                   .wvalid
			h2f_lw_WREADY             => hps_h2f_lw_axi_master_wready,                 --                   .wready
			h2f_lw_BID                => hps_h2f_lw_axi_master_bid,                    --                   .bid
			h2f_lw_BRESP              => hps_h2f_lw_axi_master_bresp,                  --                   .bresp
			h2f_lw_BVALID             => hps_h2f_lw_axi_master_bvalid,                 --                   .bvalid
			h2f_lw_BREADY             => hps_h2f_lw_axi_master_bready,                 --                   .bready
			h2f_lw_ARID               => hps_h2f_lw_axi_master_arid,                   --                   .arid
			h2f_lw_ARADDR             => hps_h2f_lw_axi_master_araddr,                 --                   .araddr
			h2f_lw_ARLEN              => hps_h2f_lw_axi_master_arlen,                  --                   .arlen
			h2f_lw_ARSIZE             => hps_h2f_lw_axi_master_arsize,                 --                   .arsize
			h2f_lw_ARBURST            => hps_h2f_lw_axi_master_arburst,                --                   .arburst
			h2f_lw_ARLOCK             => hps_h2f_lw_axi_master_arlock,                 --                   .arlock
			h2f_lw_ARCACHE            => hps_h2f_lw_axi_master_arcache,                --                   .arcache
			h2f_lw_ARPROT             => hps_h2f_lw_axi_master_arprot,                 --                   .arprot
			h2f_lw_ARVALID            => hps_h2f_lw_axi_master_arvalid,                --                   .arvalid
			h2f_lw_ARREADY            => hps_h2f_lw_axi_master_arready,                --                   .arready
			h2f_lw_ARUSER             => hps_h2f_lw_axi_master_aruser,                 --                   .aruser
			h2f_lw_RID                => hps_h2f_lw_axi_master_rid,                    --                   .rid
			h2f_lw_RDATA              => hps_h2f_lw_axi_master_rdata,                  --                   .rdata
			h2f_lw_RRESP              => hps_h2f_lw_axi_master_rresp,                  --                   .rresp
			h2f_lw_RLAST              => hps_h2f_lw_axi_master_rlast,                  --                   .rlast
			h2f_lw_RVALID             => hps_h2f_lw_axi_master_rvalid,                 --                   .rvalid
			h2f_lw_RREADY             => hps_h2f_lw_axi_master_rready,                 --                   .rready
			f2h_irq_p0                => hps_f2h_irq0_irq,                             --           f2h_irq0.irq
			f2h_irq_p1                => hps_f2h_irq1_irq,                             --           f2h_irq1.irq
			spim1_mosi_o              => hps_spim1_mosi_o,                             --              spim1.mosi_o
			spim1_miso_i              => hps_spim1_miso_i,                             --                   .miso_i
			spim1_ss_in_n             => hps_spim1_ss_in_n,                            --                   .ss_in_n
			spim1_mosi_oe             => hps_spim1_mosi_oe,                            --                   .mosi_oe
			spim1_ss0_n_o             => hps_spim1_ss0_n_o,                            --                   .ss0_n_o
			spim1_ss1_n_o             => hps_spim1_ss1_n_o,                            --                   .ss1_n_o
			spim1_ss2_n_o             => hps_spim1_ss2_n_o,                            --                   .ss2_n_o
			spim1_ss3_n_o             => hps_spim1_ss3_n_o,                            --                   .ss3_n_o
			spim1_sclk_out            => hps_spim1_sclk_out_clk,                       --     spim1_sclk_out.clk
			i2c0_scl_i                => hps_i2c0_scl_in_clk,                          --        i2c0_scl_in.clk
			i2c0_scl_oe               => hps_i2c0_clk_clk,                             --           i2c0_clk.clk
			i2c0_sda_i                => hps_i2c0_sda_i,                               --               i2c0.sda_i
			i2c0_sda_oe               => hps_i2c0_sda_oe,                              --                   .sda_oe
			hps_io_phery_emac1_TX_CLK => hps_io_hps_io_phery_emac1_TX_CLK,             --             hps_io.hps_io_phery_emac1_TX_CLK
			hps_io_phery_emac1_TXD0   => hps_io_hps_io_phery_emac1_TXD0,               --                   .hps_io_phery_emac1_TXD0
			hps_io_phery_emac1_TXD1   => hps_io_hps_io_phery_emac1_TXD1,               --                   .hps_io_phery_emac1_TXD1
			hps_io_phery_emac1_TXD2   => hps_io_hps_io_phery_emac1_TXD2,               --                   .hps_io_phery_emac1_TXD2
			hps_io_phery_emac1_TXD3   => hps_io_hps_io_phery_emac1_TXD3,               --                   .hps_io_phery_emac1_TXD3
			hps_io_phery_emac1_RX_CTL => hps_io_hps_io_phery_emac1_RX_CTL,             --                   .hps_io_phery_emac1_RX_CTL
			hps_io_phery_emac1_TX_CTL => hps_io_hps_io_phery_emac1_TX_CTL,             --                   .hps_io_phery_emac1_TX_CTL
			hps_io_phery_emac1_RX_CLK => hps_io_hps_io_phery_emac1_RX_CLK,             --                   .hps_io_phery_emac1_RX_CLK
			hps_io_phery_emac1_RXD0   => hps_io_hps_io_phery_emac1_RXD0,               --                   .hps_io_phery_emac1_RXD0
			hps_io_phery_emac1_RXD1   => hps_io_hps_io_phery_emac1_RXD1,               --                   .hps_io_phery_emac1_RXD1
			hps_io_phery_emac1_RXD2   => hps_io_hps_io_phery_emac1_RXD2,               --                   .hps_io_phery_emac1_RXD2
			hps_io_phery_emac1_RXD3   => hps_io_hps_io_phery_emac1_RXD3,               --                   .hps_io_phery_emac1_RXD3
			hps_io_phery_emac1_MDIO   => hps_io_hps_io_phery_emac1_MDIO,               --                   .hps_io_phery_emac1_MDIO
			hps_io_phery_emac1_MDC    => hps_io_hps_io_phery_emac1_MDC,                --                   .hps_io_phery_emac1_MDC
			hps_io_phery_emac2_TX_CLK => hps_io_hps_io_phery_emac2_TX_CLK,             --                   .hps_io_phery_emac2_TX_CLK
			hps_io_phery_emac2_TXD0   => hps_io_hps_io_phery_emac2_TXD0,               --                   .hps_io_phery_emac2_TXD0
			hps_io_phery_emac2_TXD1   => hps_io_hps_io_phery_emac2_TXD1,               --                   .hps_io_phery_emac2_TXD1
			hps_io_phery_emac2_TXD2   => hps_io_hps_io_phery_emac2_TXD2,               --                   .hps_io_phery_emac2_TXD2
			hps_io_phery_emac2_TXD3   => hps_io_hps_io_phery_emac2_TXD3,               --                   .hps_io_phery_emac2_TXD3
			hps_io_phery_emac2_RX_CTL => hps_io_hps_io_phery_emac2_RX_CTL,             --                   .hps_io_phery_emac2_RX_CTL
			hps_io_phery_emac2_TX_CTL => hps_io_hps_io_phery_emac2_TX_CTL,             --                   .hps_io_phery_emac2_TX_CTL
			hps_io_phery_emac2_RX_CLK => hps_io_hps_io_phery_emac2_RX_CLK,             --                   .hps_io_phery_emac2_RX_CLK
			hps_io_phery_emac2_RXD0   => hps_io_hps_io_phery_emac2_RXD0,               --                   .hps_io_phery_emac2_RXD0
			hps_io_phery_emac2_RXD1   => hps_io_hps_io_phery_emac2_RXD1,               --                   .hps_io_phery_emac2_RXD1
			hps_io_phery_emac2_RXD2   => hps_io_hps_io_phery_emac2_RXD2,               --                   .hps_io_phery_emac2_RXD2
			hps_io_phery_emac2_RXD3   => hps_io_hps_io_phery_emac2_RXD3,               --                   .hps_io_phery_emac2_RXD3
			hps_io_phery_emac2_MDIO   => hps_io_hps_io_phery_emac2_MDIO,               --                   .hps_io_phery_emac2_MDIO
			hps_io_phery_emac2_MDC    => hps_io_hps_io_phery_emac2_MDC,                --                   .hps_io_phery_emac2_MDC
			hps_io_phery_sdmmc_CMD    => hps_io_hps_io_phery_sdmmc_CMD,                --                   .hps_io_phery_sdmmc_CMD
			hps_io_phery_sdmmc_D0     => hps_io_hps_io_phery_sdmmc_D0,                 --                   .hps_io_phery_sdmmc_D0
			hps_io_phery_sdmmc_D1     => hps_io_hps_io_phery_sdmmc_D1,                 --                   .hps_io_phery_sdmmc_D1
			hps_io_phery_sdmmc_D2     => hps_io_hps_io_phery_sdmmc_D2,                 --                   .hps_io_phery_sdmmc_D2
			hps_io_phery_sdmmc_D3     => hps_io_hps_io_phery_sdmmc_D3,                 --                   .hps_io_phery_sdmmc_D3
			hps_io_phery_sdmmc_D4     => hps_io_hps_io_phery_sdmmc_D4,                 --                   .hps_io_phery_sdmmc_D4
			hps_io_phery_sdmmc_D5     => hps_io_hps_io_phery_sdmmc_D5,                 --                   .hps_io_phery_sdmmc_D5
			hps_io_phery_sdmmc_D6     => hps_io_hps_io_phery_sdmmc_D6,                 --                   .hps_io_phery_sdmmc_D6
			hps_io_phery_sdmmc_D7     => hps_io_hps_io_phery_sdmmc_D7,                 --                   .hps_io_phery_sdmmc_D7
			hps_io_phery_sdmmc_CCLK   => hps_io_hps_io_phery_sdmmc_CCLK,               --                   .hps_io_phery_sdmmc_CCLK
			hps_io_phery_usb1_DATA0   => hps_io_hps_io_phery_usb1_DATA0,               --                   .hps_io_phery_usb1_DATA0
			hps_io_phery_usb1_DATA1   => hps_io_hps_io_phery_usb1_DATA1,               --                   .hps_io_phery_usb1_DATA1
			hps_io_phery_usb1_DATA2   => hps_io_hps_io_phery_usb1_DATA2,               --                   .hps_io_phery_usb1_DATA2
			hps_io_phery_usb1_DATA3   => hps_io_hps_io_phery_usb1_DATA3,               --                   .hps_io_phery_usb1_DATA3
			hps_io_phery_usb1_DATA4   => hps_io_hps_io_phery_usb1_DATA4,               --                   .hps_io_phery_usb1_DATA4
			hps_io_phery_usb1_DATA5   => hps_io_hps_io_phery_usb1_DATA5,               --                   .hps_io_phery_usb1_DATA5
			hps_io_phery_usb1_DATA6   => hps_io_hps_io_phery_usb1_DATA6,               --                   .hps_io_phery_usb1_DATA6
			hps_io_phery_usb1_DATA7   => hps_io_hps_io_phery_usb1_DATA7,               --                   .hps_io_phery_usb1_DATA7
			hps_io_phery_usb1_CLK     => hps_io_hps_io_phery_usb1_CLK,                 --                   .hps_io_phery_usb1_CLK
			hps_io_phery_usb1_STP     => hps_io_hps_io_phery_usb1_STP,                 --                   .hps_io_phery_usb1_STP
			hps_io_phery_usb1_DIR     => hps_io_hps_io_phery_usb1_DIR,                 --                   .hps_io_phery_usb1_DIR
			hps_io_phery_usb1_NXT     => hps_io_hps_io_phery_usb1_NXT,                 --                   .hps_io_phery_usb1_NXT
			hps_io_phery_uart0_RX     => hps_io_hps_io_phery_uart0_RX,                 --                   .hps_io_phery_uart0_RX
			hps_io_phery_uart0_TX     => hps_io_hps_io_phery_uart0_TX,                 --                   .hps_io_phery_uart0_TX
			hps_io_phery_uart0_CTS_N  => hps_io_hps_io_phery_uart0_CTS_N,              --                   .hps_io_phery_uart0_CTS_N
			hps_io_phery_uart0_RTS_N  => hps_io_hps_io_phery_uart0_RTS_N               --                   .hps_io_phery_uart0_RTS_N
		);

	jtag_master : component soc_system_altera_jtag_avalon_master_180.soc_system_pkg.soc_system_altera_jtag_avalon_master_180_sb3msya
		generic map (
			USE_PLI     => 0,
			PLI_PORT    => 50000,
			FIFO_DEPTHS => 2
		)
		port map (
			clk_clk              => clk_clk,                 --          clk.clk
			clk_reset_reset      => reset_reset_n_ports_inv, --    clk_reset.reset
			master_address       => open,                    --       master.address
			master_readdata      => open,                    --             .readdata
			master_read          => open,                    --             .read
			master_write         => open,                    --             .write
			master_writedata     => open,                    --             .writedata
			master_waitrequest   => open,                    --             .waitrequest
			master_readdatavalid => open,                    --             .readdatavalid
			master_byteenable    => open,                    --             .byteenable
			master_reset_reset   => open                     -- master_reset.reset
		);

	simple_gain_0 : component soc_system_simple_gain_10.soc_system_pkg.SG_dataplane_avalon
		port map (
			clk                    => pll_using_ad1939_mclk_outclk0_clk,                       --                   clock.clk
			reset                  => rst_controller_reset_out_reset,                          --                   reset.reset
			avalon_slave_address   => mm_interconnect_0_simple_gain_0_avalon_slave_address(0), --            avalon_slave.address
			avalon_slave_read      => mm_interconnect_0_simple_gain_0_avalon_slave_read,       --                        .read
			avalon_slave_readdata  => mm_interconnect_0_simple_gain_0_avalon_slave_readdata,   --                        .readdata
			avalon_slave_write     => mm_interconnect_0_simple_gain_0_avalon_slave_write,      --                        .write
			avalon_slave_writedata => mm_interconnect_0_simple_gain_0_avalon_slave_writedata,  --                        .writedata
			avalon_sink_valid      => avalon_st_adapter_out_0_valid,                           --   avalon_streaming_sink.valid
			avalon_sink_data       => avalon_st_adapter_out_0_data,                            --                        .data
			avalon_sink_channel    => avalon_st_adapter_out_0_channel,                         --                        .channel
			avalon_sink_error      => avalon_st_adapter_out_0_error,                           --                        .error
			avalon_source_valid    => simple_gain_0_avalon_streaming_source_valid,             -- avalon_streaming_source.valid
			avalon_source_data     => simple_gain_0_avalon_streaming_source_data,              --                        .data
			avalon_source_channel  => simple_gain_0_avalon_streaming_source_channel,           --                        .channel
			avalon_source_error    => simple_gain_0_avalon_streaming_source_error              --                        .error
		);

	sysid_qsys_0 : component soc_system_altera_avalon_sysid_qsys_180.soc_system_pkg.soc_system_altera_avalon_sysid_qsys_180_2mot6jq
		port map (
			clock    => clk_clk,                                                 --           clk.clk
			reset_n  => rst_controller_001_reset_out_reset_ports_inv,            --         reset.reset_n
			readdata => mm_interconnect_0_sysid_qsys_0_control_slave_readdata,   -- control_slave.readdata
			address  => mm_interconnect_0_sysid_qsys_0_control_slave_address(0)  --              .address
		);

	mm_interconnect_0 : component soc_system_altera_mm_interconnect_180.soc_system_pkg.soc_system_altera_mm_interconnect_180_xupykdy
		port map (
			hps_h2f_lw_axi_master_awid                                   => hps_h2f_lw_axi_master_awid,                                          --                                  hps_h2f_lw_axi_master.awid
			hps_h2f_lw_axi_master_awaddr                                 => hps_h2f_lw_axi_master_awaddr,                                        --                                                       .awaddr
			hps_h2f_lw_axi_master_awlen                                  => hps_h2f_lw_axi_master_awlen,                                         --                                                       .awlen
			hps_h2f_lw_axi_master_awsize                                 => hps_h2f_lw_axi_master_awsize,                                        --                                                       .awsize
			hps_h2f_lw_axi_master_awburst                                => hps_h2f_lw_axi_master_awburst,                                       --                                                       .awburst
			hps_h2f_lw_axi_master_awlock                                 => hps_h2f_lw_axi_master_awlock,                                        --                                                       .awlock
			hps_h2f_lw_axi_master_awcache                                => hps_h2f_lw_axi_master_awcache,                                       --                                                       .awcache
			hps_h2f_lw_axi_master_awprot                                 => hps_h2f_lw_axi_master_awprot,                                        --                                                       .awprot
			hps_h2f_lw_axi_master_awuser                                 => hps_h2f_lw_axi_master_awuser,                                        --                                                       .awuser
			hps_h2f_lw_axi_master_awvalid                                => hps_h2f_lw_axi_master_awvalid,                                       --                                                       .awvalid
			hps_h2f_lw_axi_master_awready                                => hps_h2f_lw_axi_master_awready,                                       --                                                       .awready
			hps_h2f_lw_axi_master_wid                                    => hps_h2f_lw_axi_master_wid,                                           --                                                       .wid
			hps_h2f_lw_axi_master_wdata                                  => hps_h2f_lw_axi_master_wdata,                                         --                                                       .wdata
			hps_h2f_lw_axi_master_wstrb                                  => hps_h2f_lw_axi_master_wstrb,                                         --                                                       .wstrb
			hps_h2f_lw_axi_master_wlast                                  => hps_h2f_lw_axi_master_wlast,                                         --                                                       .wlast
			hps_h2f_lw_axi_master_wvalid                                 => hps_h2f_lw_axi_master_wvalid,                                        --                                                       .wvalid
			hps_h2f_lw_axi_master_wready                                 => hps_h2f_lw_axi_master_wready,                                        --                                                       .wready
			hps_h2f_lw_axi_master_bid                                    => hps_h2f_lw_axi_master_bid,                                           --                                                       .bid
			hps_h2f_lw_axi_master_bresp                                  => hps_h2f_lw_axi_master_bresp,                                         --                                                       .bresp
			hps_h2f_lw_axi_master_bvalid                                 => hps_h2f_lw_axi_master_bvalid,                                        --                                                       .bvalid
			hps_h2f_lw_axi_master_bready                                 => hps_h2f_lw_axi_master_bready,                                        --                                                       .bready
			hps_h2f_lw_axi_master_arid                                   => hps_h2f_lw_axi_master_arid,                                          --                                                       .arid
			hps_h2f_lw_axi_master_araddr                                 => hps_h2f_lw_axi_master_araddr,                                        --                                                       .araddr
			hps_h2f_lw_axi_master_arlen                                  => hps_h2f_lw_axi_master_arlen,                                         --                                                       .arlen
			hps_h2f_lw_axi_master_arsize                                 => hps_h2f_lw_axi_master_arsize,                                        --                                                       .arsize
			hps_h2f_lw_axi_master_arburst                                => hps_h2f_lw_axi_master_arburst,                                       --                                                       .arburst
			hps_h2f_lw_axi_master_arlock                                 => hps_h2f_lw_axi_master_arlock,                                        --                                                       .arlock
			hps_h2f_lw_axi_master_arcache                                => hps_h2f_lw_axi_master_arcache,                                       --                                                       .arcache
			hps_h2f_lw_axi_master_arprot                                 => hps_h2f_lw_axi_master_arprot,                                        --                                                       .arprot
			hps_h2f_lw_axi_master_aruser                                 => hps_h2f_lw_axi_master_aruser,                                        --                                                       .aruser
			hps_h2f_lw_axi_master_arvalid                                => hps_h2f_lw_axi_master_arvalid,                                       --                                                       .arvalid
			hps_h2f_lw_axi_master_arready                                => hps_h2f_lw_axi_master_arready,                                       --                                                       .arready
			hps_h2f_lw_axi_master_rid                                    => hps_h2f_lw_axi_master_rid,                                           --                                                       .rid
			hps_h2f_lw_axi_master_rdata                                  => hps_h2f_lw_axi_master_rdata,                                         --                                                       .rdata
			hps_h2f_lw_axi_master_rresp                                  => hps_h2f_lw_axi_master_rresp,                                         --                                                       .rresp
			hps_h2f_lw_axi_master_rlast                                  => hps_h2f_lw_axi_master_rlast,                                         --                                                       .rlast
			hps_h2f_lw_axi_master_rvalid                                 => hps_h2f_lw_axi_master_rvalid,                                        --                                                       .rvalid
			hps_h2f_lw_axi_master_rready                                 => hps_h2f_lw_axi_master_rready,                                        --                                                       .rready
			clk_hps_clk_clk                                              => clk_clk,                                                             --                                            clk_hps_clk.clk
			PLL_using_AD1939_MCLK_outclk0_clk                            => pll_using_ad1939_mclk_outclk0_clk,                                   --                          PLL_using_AD1939_MCLK_outclk0.clk
			delay_and_sum_beamformer_0_reset_reset_bridge_in_reset_reset => rst_controller_reset_out_reset,                                      -- delay_and_sum_beamformer_0_reset_reset_bridge_in_reset.reset
			hps_h2f_lw_axi_reset_reset_bridge_in_reset_reset             => rst_controller_001_reset_out_reset,                                  --             hps_h2f_lw_axi_reset_reset_bridge_in_reset.reset
			delay_and_sum_beamformer_0_avalon_slave_address              => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_address,   --                delay_and_sum_beamformer_0_avalon_slave.address
			delay_and_sum_beamformer_0_avalon_slave_write                => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_write,     --                                                       .write
			delay_and_sum_beamformer_0_avalon_slave_read                 => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_read,      --                                                       .read
			delay_and_sum_beamformer_0_avalon_slave_readdata             => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_readdata,  --                                                       .readdata
			delay_and_sum_beamformer_0_avalon_slave_writedata            => mm_interconnect_0_delay_and_sum_beamformer_0_avalon_slave_writedata, --                                                       .writedata
			simple_gain_0_avalon_slave_address                           => mm_interconnect_0_simple_gain_0_avalon_slave_address,                --                             simple_gain_0_avalon_slave.address
			simple_gain_0_avalon_slave_write                             => mm_interconnect_0_simple_gain_0_avalon_slave_write,                  --                                                       .write
			simple_gain_0_avalon_slave_read                              => mm_interconnect_0_simple_gain_0_avalon_slave_read,                   --                                                       .read
			simple_gain_0_avalon_slave_readdata                          => mm_interconnect_0_simple_gain_0_avalon_slave_readdata,               --                                                       .readdata
			simple_gain_0_avalon_slave_writedata                         => mm_interconnect_0_simple_gain_0_avalon_slave_writedata,              --                                                       .writedata
			sysid_qsys_0_control_slave_address                           => mm_interconnect_0_sysid_qsys_0_control_slave_address,                --                             sysid_qsys_0_control_slave.address
			sysid_qsys_0_control_slave_readdata                          => mm_interconnect_0_sysid_qsys_0_control_slave_readdata                --                                                       .readdata
		);

	avalon_st_adapter : component soc_system_altera_avalon_st_adapter_180.soc_system_pkg.soc_system_altera_avalon_st_adapter_180_izrqeji
		generic map (
			inBitsPerSymbol => 32,
			inUsePackets    => 0,
			inDataWidth     => 32,
			inChannelWidth  => 1,
			inErrorWidth    => 2,
			inUseEmptyPort  => 0,
			inUseValid      => 1,
			inUseReady      => 0,
			inReadyLatency  => 0,
			outDataWidth    => 32,
			outChannelWidth => 2,
			outErrorWidth   => 2,
			outUseEmptyPort => 0,
			outUseValid     => 1,
			outUseReady     => 0,
			outReadyLatency => 0
		)
		port map (
			in_clk_0_clk   => pll_using_ad1939_mclk_outclk0_clk,                          -- in_clk_0.clk
			in_rst_0_reset => rst_controller_reset_out_reset,                             -- in_rst_0.reset
			in_0_data      => delay_and_sum_beamformer_0_avalon_streaming_source_data,    --     in_0.data
			in_0_valid     => delay_and_sum_beamformer_0_avalon_streaming_source_valid,   --         .valid
			in_0_error     => delay_and_sum_beamformer_0_avalon_streaming_source_error,   --         .error
			in_0_channel   => delay_and_sum_beamformer_0_avalon_streaming_source_channel, --         .channel
			out_0_data     => avalon_st_adapter_out_0_data,                               --    out_0.data
			out_0_valid    => avalon_st_adapter_out_0_valid,                              --         .valid
			out_0_error    => avalon_st_adapter_out_0_error,                              --         .error
			out_0_channel  => avalon_st_adapter_out_0_channel                             --         .channel
		);

	rst_controller : component soc_system_altera_reset_controller_180.soc_system_pkg.altera_reset_controller
		generic map (
			NUM_RESET_INPUTS          => 1,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,           -- reset_in0.reset
			clk            => pll_using_ad1939_mclk_outclk0_clk, --       clk.clk
			reset_out      => rst_controller_reset_out_reset,    -- reset_out.reset
			reset_req      => open,                              -- (terminated)
			reset_req_in0  => '0',                               -- (terminated)
			reset_in1      => '0',                               -- (terminated)
			reset_req_in1  => '0',                               -- (terminated)
			reset_in2      => '0',                               -- (terminated)
			reset_req_in2  => '0',                               -- (terminated)
			reset_in3      => '0',                               -- (terminated)
			reset_req_in3  => '0',                               -- (terminated)
			reset_in4      => '0',                               -- (terminated)
			reset_req_in4  => '0',                               -- (terminated)
			reset_in5      => '0',                               -- (terminated)
			reset_req_in5  => '0',                               -- (terminated)
			reset_in6      => '0',                               -- (terminated)
			reset_req_in6  => '0',                               -- (terminated)
			reset_in7      => '0',                               -- (terminated)
			reset_req_in7  => '0',                               -- (terminated)
			reset_in8      => '0',                               -- (terminated)
			reset_req_in8  => '0',                               -- (terminated)
			reset_in9      => '0',                               -- (terminated)
			reset_req_in9  => '0',                               -- (terminated)
			reset_in10     => '0',                               -- (terminated)
			reset_req_in10 => '0',                               -- (terminated)
			reset_in11     => '0',                               -- (terminated)
			reset_req_in11 => '0',                               -- (terminated)
			reset_in12     => '0',                               -- (terminated)
			reset_req_in12 => '0',                               -- (terminated)
			reset_in13     => '0',                               -- (terminated)
			reset_req_in13 => '0',                               -- (terminated)
			reset_in14     => '0',                               -- (terminated)
			reset_req_in14 => '0',                               -- (terminated)
			reset_in15     => '0',                               -- (terminated)
			reset_req_in15 => '0'                                -- (terminated)
		);

	rst_controller_001 : component soc_system_altera_reset_controller_180.soc_system_pkg.altera_reset_controller
		generic map (
			NUM_RESET_INPUTS          => 1,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,            -- reset_in0.reset
			clk            => clk_clk,                            --       clk.clk
			reset_out      => rst_controller_001_reset_out_reset, -- reset_out.reset
			reset_req      => open,                               -- (terminated)
			reset_req_in0  => '0',                                -- (terminated)
			reset_in1      => '0',                                -- (terminated)
			reset_req_in1  => '0',                                -- (terminated)
			reset_in2      => '0',                                -- (terminated)
			reset_req_in2  => '0',                                -- (terminated)
			reset_in3      => '0',                                -- (terminated)
			reset_req_in3  => '0',                                -- (terminated)
			reset_in4      => '0',                                -- (terminated)
			reset_req_in4  => '0',                                -- (terminated)
			reset_in5      => '0',                                -- (terminated)
			reset_req_in5  => '0',                                -- (terminated)
			reset_in6      => '0',                                -- (terminated)
			reset_req_in6  => '0',                                -- (terminated)
			reset_in7      => '0',                                -- (terminated)
			reset_req_in7  => '0',                                -- (terminated)
			reset_in8      => '0',                                -- (terminated)
			reset_req_in8  => '0',                                -- (terminated)
			reset_in9      => '0',                                -- (terminated)
			reset_req_in9  => '0',                                -- (terminated)
			reset_in10     => '0',                                -- (terminated)
			reset_req_in10 => '0',                                -- (terminated)
			reset_in11     => '0',                                -- (terminated)
			reset_req_in11 => '0',                                -- (terminated)
			reset_in12     => '0',                                -- (terminated)
			reset_req_in12 => '0',                                -- (terminated)
			reset_in13     => '0',                                -- (terminated)
			reset_req_in13 => '0',                                -- (terminated)
			reset_in14     => '0',                                -- (terminated)
			reset_req_in14 => '0',                                -- (terminated)
			reset_in15     => '0',                                -- (terminated)
			reset_req_in15 => '0'                                 -- (terminated)
		);

	reset_reset_n_ports_inv <= not reset_reset_n;

	rst_controller_reset_out_reset_ports_inv <= not rst_controller_reset_out_reset;

	rst_controller_001_reset_out_reset_ports_inv <= not rst_controller_001_reset_out_reset;

end architecture rtl; -- of soc_system
